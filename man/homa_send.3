.TH HOMA_SEND 3 2022-12-13 "Homa" "Linux Programmer's Manual"
.SH NAME
homa_send, homa_sendv \- send a request message
.SH SYNOPSIS
.nf
.B #include <homa.h>
.PP
.BI "int homa_send(int " sockfd ", const void *" message_buf ", size_t " length \
", const sockaddr_in_union *" dest_addr ",
.BI "              uint64_t *" id ", uint64_t " \
"completion_cookie" );
.PP
.BI "int homa_sendv(int " sockfd ", const struct iovec *" iov ", size_t " \
iovcnt ", const sockaddr_in_union *" dest_addr ,
.BI "              uint64_t *" id ", uint64_t " \
"completion_cookie" );
.fi
.SH DESCRIPTION
.BR homa_send
and
.BR homa_sendv
are convenience functions layered on top of the
.B sendmsg
system call.
Either may be used to transmit a request message using the Homa
transport protocol.
The argument
.I sockfd
is the file descriptor of the sending socket; this must be a Homa socket.
With
.BR homa_send
the request message is stored in a single contiguous buffer pointed to by
.IR message_buf ,
and the argument
.I length
gives the length of the message in bytes.
With
.BR homa_sendv
the request message consists of multiple disjoint chunks, specified
by
.I iovcnt
descriptors at
.IR iov .
In either case, the total message length must not exceed
.BR HOMA_MAX_MESSAGE_LENGTH .
The destination socket for the request is given by
.IR dest_addr ,
which can hold either an IPv4 or IPv6 address:
.PP
.in +4n
.ps -1
.vs -2
.EX
typedef union sockaddr_in_union {
    struct sockaddr sa;
    struct sockaddr_in in4;
    struct sockaddr_in6 in6;
} sockaddr_in_union;
.EE
.vs +2
.ps +1
.in
.PP
If
.I id
is not NULL, an identifier for the request is returned at
.IR *id.
The identifier will be unique among all requests issued on
.IR sockfd ,
and can be used to match the request with a response returned later by
.BR homa_reply (3).
The
.I completion_cookie
argument provides application-specific identifying information about the RPC,
such as the address of a data structure used to manage the
RPC; it will be returned by
.BR homa_recv
when the RPC completes.
.PP
This function returns as soon as the message has been queued for
transmission.

.SH RETURN VALUE
On success, the return value is 0 and an identifier for the request
is stored in
.I *id
(if
.I id
is not NULL).
The  identifier can be used later to match the request
with the corresponding response, using
.BR homa_reply (3).
On error, \-1 is returned and
.I errno
is set appropriately.
.SH ERRORS
After an error return,
.I errno
will contain additional information about the cause of the error.
See
.BR sendmsg (2)
for details.
.SH SEE ALSO
.BR recvmsg (2),
.BR sendmsg (2),
.BR homa_abort (3),
.BR homa_reply (3),
.BR homa (7)
